generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String         @id @default(uuid())
  name                  String
  email                 String         @unique
  password              String
  otp                   String?
  email_verified        Boolean        @default(false)
  account_active        Boolean        @default(true)
  otp_expires_at        DateTime?
  Spaces                Spaces[]
  favouriteTestimonials Testimonials[] @relation("UserFavourites")
}

model Spaces {
  id           String         @id @default(uuid())
  userId       String
  title        String         @unique
  slug         String?         @unique
  description  String?
  createdAt    DateTime       @default(now())
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  Testimonials Testimonials[]
}

enum ReviewType{
  TEXT
  VIDEO
}

model Testimonials {
  id                String   @id @default(uuid())
  spaceId           String
  name              String
  email             String
  photo             String?
  rating            Int?
  reviewType        ReviewType
  reviewText        String?
  videoUrl          String?
  createdAt         DateTime @default(now())
  favoritedByUserId String?
  favoritedBy       User?    @relation("UserFavourites", fields: [favoritedByUserId], references: [id])
  space             Spaces   @relation(fields: [spaceId], references: [id])
}

// review can be of type text or video
// it will always contain email,name,photo,review which can be of type video or text of user giving review 
// the user submitting the review need not to be in User model
